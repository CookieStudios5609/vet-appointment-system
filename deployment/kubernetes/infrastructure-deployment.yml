---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eureka-server-deployment
  namespace: default
  labels:
    app: eureka-server-deployment
spec:
  selector:
    matchLabels:
      app: eureka-server-deployment
  template:
    metadata:
      labels:
        app: eureka-server-deployment
    spec:
      containers:
        - name: eureka-server
          image: com.vet.appointment.system/eureka-server:1.0-SNAPSHOT
---
apiVersion: v1
kind: Service
metadata:
  name: eureka-server-service
  namespace: default
  labels:
    app: eureka-server-deployment
spec:
  selector:
    app: eureka-server-deployment
  ports:
    - name: eureka-server-service-port
      protocol: TCP
      port: 8761
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deployment
  namespace: default
  labels:
      app: api-gateway-deployment
spec:
  selector:
    matchLabels:
      app: api-gateway-deployment
  template:
    metadata:
      labels:
        app: api-gateway-deployment
    spec:
      containers:
        - name: api-gateway
          image: com.vet.appointment.system/api-gateway:1.0-SNAPSHOT
          env:
            - name: EUREKA_HOST
              value: "http://eureka-server-service"
            - name: JWT_SECRET
              value: "eba2564000c1fa6172fb005030cd5c173dd15e8c6e5fb8d2b67093d6dc2712ce"
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: default
  labels:
    app: api-gateway-deployment
spec:
  selector:
    app: api-gateway-deployment
  ports:
    - name: api-gateway-service-port
      protocol: TCP
      port: 8080
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-deployment
  namespace: default
  labels:
    app: zookeeper-deployment
spec:
    selector:
        matchLabels:
          app: zookeeper-deployment
    template:
        metadata:
          labels:
            app: zookeeper-deployment
        spec:
          containers:
            - name: zookeeper
              image: confluentinc/cp-zookeeper:latest
              env:
                - name: ZOOKEEPER_CLIENT_PORT
                  value: "2181"
                - name: ZOOKEEPER_TICK_TIME
                  value: "2000"
                - name: ZOOKEEPER_INIT_LIMIT
                  value: "5"
                - name: ZOOKEEPER_SYNC_LIMIT
                  value: "2"
                - name: ZOOKEEPER_SERVER_ID
                  value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
  namespace: default
  labels:
    app: zookeeper-deployment
spec:
  selector:
    app: zookeeper-deployment
  ports:
    - name: zookeeper-service-port
      protocol: TCP
      port: 2181
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker-deployment
  namespace: default
  labels:
    app: kafka-broker-deployment
spec:
    selector:
        matchLabels:
          app: kafka-broker-deployment
    template:
        metadata:
          labels:
            app: kafka-broker-deployment
        spec:
          containers:
            - name: kafka-broker
              image: confluentinc/cp-kafka:latest
              env:
                - name: KAFKA_BROKER_ID
                  value: "1"
                - name: KAFKA_ZOOKEEPER_CONNECT
                  value: "zookeeper-service:2181"
                - name: KAFKA_ADVERTISED_LISTENERS
                  value: "PLAINTEXT://kafka-broker-service:9092,PLAINTEXT_HOST://localhost:29092"
                - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
                  value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
                - name: KAFKA_INTER_BROKER_LISTENER_NAME
                  value: "PLAINTEXT"
                - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
                  value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker-service
  namespace: default
  labels:
    app: kafka-broker-deployment
spec:
    selector:
        app: kafka-broker-deployment
    ports:
      - name: kafka-broker-service-port
        protocol: TCP
        port: 9092
        targetPort: 9092
    type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry-deployment
  namespace: default
  labels:
    app: schema-registry-deployment
spec:
  selector:
    matchLabels:
      app: schema-registry-deployment
  template:
    metadata:
      labels:
        app: schema-registry-deployment
    spec:
      containers:
        - name: schema-registry
          image: confluentinc/cp-schema-registry:latest
          env:
            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              value: "PLAINTEXT://kafka-broker-service:9092"
            - name: SCHEMA_REGISTRY_HOST_NAME
              value: "schema-registry-service"
            - name: SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL
              value: "zookeeper-service:2181"
            - name: SCHEMA_REGISTRY_LISTENERS
              value: "http://0.0.0.0:8081"
---
apiVersion: v1
kind: Service
metadata:
  name: schema-registry-service
  namespace: default
  labels:
    app: schema-registry-deployment
spec:
  selector:
    app: schema-registry-deployment
  ports:
    - name: schema-registry-service-port
      protocol: TCP
      port: 8081
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui-deployment
  namespace: default
  labels:
      app: kafka-ui-deployment
spec:
  selector:
    matchLabels:
      app: kafka-ui-deployment
  template:
    metadata:
      labels:
        app: kafka-ui-deployment
    spec:
      containers:
        - name: kafka-ui
          image: provectuslabs/kafka-ui:latest
          env:
            - name: ZK_HOST
              value: "zookeeper-service:2181"
            - name: KAFKA_CLUSTERS_0_NAME
              value: "kafka-broker-service"
            - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
              value: "kafka-broker-service:9092"
            - name: KAFKA_CLUSTERS_0_SCHEMAREGISTRY
              value: "http://schema-registry-service:8081"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui-service
  namespace: default
  labels:
    app: kafka-ui-deployment
spec:
  selector:
    app: kafka-ui-deployment
  ports:
    - name: kafka-ui-service-port
      protocol: TCP
      port: 9000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: debezium-connect-deployment
  namespace: default
  labels:
    app: debezium-connect-deployment
spec:
  selector:
    matchLabels:
      app: debezium-connect-deployment
  template:
    metadata:
      labels:
        app: debezium-connect-deployment
    spec:
      containers:
        - name: debezium-connect
          image: com.vet.appointment.system/debezium-connect:1.0-SNAPSHOT
          env:
            # General config
            - name: GROUP_ID
              value: "1"
            - name: CONFIG_STORAGE_TOPIC
              value: "connect-config"
            - name: OFFSET_STORAGE_TOPIC
              value: "connect-offsets"
            - name: STATUS_STORAGE_TOPIC
              value: "connect-status"
            - name: BOOTSTRAP_SERVERS
              value: "kafka-broker-service:9092"
            - name: LOGGING_LEVEL
              value: "DEBUG"
            # Schema registry config
            - name: CONNECT_SCHEMA_NAME_ADJUSTMENT_MODE
              value: "avro"
            - name: KEY_CONVERTER
              value: "io.confluent.connect.avro.AvroConverter"
            - name: VALUE_CONVERTER
              value: "io.confluent.connect.avro.AvroConverter"
            - name: CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
              value: "http://schema-registry-service:8081"
            - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
              value: "http://schema-registry-service:8081"
---
apiVersion: v1
kind: Service
metadata:
  name: debezium-connect-service
  namespace: default
  labels:
    app: debezium-connect-deployment
spec:
  selector:
    app: debezium-connect-deployment
  ports:
  - name: debezium-connect-service-port
    protocol: TCP
    port: 8083
  type: LoadBalancer
