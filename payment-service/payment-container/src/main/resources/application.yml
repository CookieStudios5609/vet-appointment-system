
# Application config
server:
  port: 8185

# Database
spring:
  application:
    name: "payment-service"
  jpa:
    show-sql: true
    open-in-view: false
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST:localhost}:5432/postgres?stringtype=unspecified&currentSchema=payment
    username: ${POSTGRES_USER:user}
    password: ${POSTGRES_PASSWORD:admin}
    driver-class-name: org.postgresql.Driver
  sql:
    init:
      schema-locations: classpath:init-schema.sql
      mode: always
      platform: postgres
      data-locations: classpath:init-data.sql

# Kafka
kafka-config-data:
  bootstrap-server: ${KAFKA_BOOTSTRAP_HOST:localhost}:${KAFKA_BOOTSTRAP_PORT:29092}
  schema-registry-url: ${SCHEMA_REGISTRY_HOST:http://localhost}:8081
  schema-registry-url-key: schema.registry.url

kafka-producer-data:
  key-serializer-class: org.apache.kafka.common.serialization.StringSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer

kafka-consumer-data:
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true

kafka-consumer-topic-name:
  account-created-event: account_created.account.appointment_outbox
  payment-request-event: payment_request.appointment.payment_outbox

kafka-consumer-group-id:
    payment-request-event: payment_request_group
